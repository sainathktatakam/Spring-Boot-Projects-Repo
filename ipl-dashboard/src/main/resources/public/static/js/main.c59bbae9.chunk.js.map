{"version":3,"sources":["components/MatchDetailsCard.js","components/MatchSmallCard.js","pages/TeamPage.js","pages/YearSelector.js","pages/MatchPage.js","components/TeamTitle.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailsCard","teamName","matche","otherTeam","team1","team2","otherTeamRoute","isMatchwon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","match","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchteam","title","value","totalMatches","color","totalWins","slice","map","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","id","TeamTitle","TeamRout","HomePage","teams","setData","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oYAIaA,EAAmB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACzC,IAAKA,EAAQ,OAAO,KAEpB,IAAMC,EAAYF,IAAaC,EAAOE,MAAQF,EAAOG,MAAQH,EAAOE,MAC9DE,EAAc,gBAAYH,GAC1BI,EAAcL,EAAOM,cAAgBP,EAC3C,OACI,sBAAKQ,UAAWF,EAAY,2BAA2B,4BAAvD,UACI,gCACI,sBAAME,UAAU,KAAhB,gBACA,mCAAK,eAAC,IAAD,CAAMC,GAAIJ,EAAV,UAA2BH,EAA3B,OAAL,OACA,oBAAIM,UAAU,aAAd,SAA4BP,EAAOS,OACnC,qBAAIF,UAAU,cAAd,gBAAgCP,EAAOU,SACvC,qBAAIH,UAAU,eAAd,UAA8BP,EAAOM,YAArC,WAA0DN,EAAOW,aAAjE,IAAgFX,EAAOY,aAE3F,sBAAKL,UAAU,qBAAf,UACI,+CACA,kCAAKP,EAAOE,SACZ,gDACA,kCAAKF,EAAOG,SACZ,kDACA,kCAAKH,EAAOa,iBACZ,yCACA,kCAAKb,EAAOc,QAAZ,IAAsBd,EAAOe,kBCvBhCC,EAAiB,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,SAAUkB,EAAY,EAAZA,MAEjChB,EAAYF,IAAakB,EAAMf,MAAQe,EAAMd,MAAMc,EAAMf,MACzDE,EAAc,gBAAYH,GAC1BI,EAAcY,EAAMX,cAAgBP,EAC1C,OACI,sBAAKQ,UAAWF,EAAa,0BAA0B,2BAAvD,UACA,sBAAME,UAAU,KAAhB,gBACC,mCAAK,eAAC,IAAD,CAAMC,GAAMJ,EAAZ,cAA8BH,EAA9B,OAAL,OACG,oBAAGM,UAAU,eAAb,cAA8BU,EAAMX,YAApC,WAAyDW,EAAMN,aAA/D,IAA8EM,EAAML,c,QCNnFM,G,MAAW,WAAO,IAAD,EAEFC,mBAAS,CAAEC,QAAS,KAFlB,mBAEnBC,EAFmB,KAEbC,EAFa,KAGlBvB,EAAawB,cAAbxB,SAiBR,OAhBAyB,qBAEI,YAEmB,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,8BAAD,OAA+B3B,IAD7C,cACR4B,EADQ,gBAEKA,EAASC,OAFd,OAERC,EAFQ,OAIdP,EAAQO,GAJM,2CAAH,qDAOfC,KACD,CAAC/B,IAIHsB,GAASA,EAAKtB,SAKf,sBAAKQ,UAAU,WAAf,UACG,qBAAKA,UAAU,YAAf,SACK,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,4BAER,qBAAKD,UAAU,oBAAf,SACI,sBAAKA,UAAU,YAAf,cAA4B,6BAAKc,EAAKtB,WAAtC,SAGJ,sBAAKQ,UAAU,mBAAf,wBAEI,cAAC,WAAD,CACIsB,KAAM,CAEF,CAAEE,MAAO,SAAUC,MAAOX,EAAKY,aAAcC,MAAO,WACpD,CAAEH,MAAO,OAAQC,MAAOX,EAAKc,UAAWD,MAAM,iBAK1D,sBAAK3B,UAAU,wBAAf,UACI,sDACA,cAAC,EAAD,CAAkBR,SAAUsB,EAAKtB,SAAUC,OAAQqB,EAAKD,QAAQ,QAGnEC,EAAKD,QAAQgB,MAAM,GAAGC,KAAI,SAAApB,GAAK,OAAI,cAAC,EAAD,CAAgBlB,SAAUsB,EAAKtB,SAAUkB,MAAOA,OACpF,qBAAKV,UAAU,OAAf,SACE,cAAC,IAAD,CAAMC,GAAE,gBAAaa,EAAKtB,SAAlB,oBAAsCuC,QAA9C,wBA9BC,qDCxBFC,G,YAAe,SAAC,GAKpB,IALoC,IAAfxC,EAAc,EAAdA,SAClByC,EAAO,GAIFC,EAHUH,OAGEG,GAFJH,OAEeG,IAC3BD,EAAME,KAAKD,GAIhB,OACC,oBAAIlC,UAAU,YAAd,SACI,6BAAKiC,EAAMH,KAAK,SAAAM,GAAI,OACb,6BACK,eAAC,IAAD,CAAMnC,GAAE,gBAAYT,EAAZ,oBAAgC4C,GAAxC,cAAkDA,MAD7CA,YCXjBC,EAAY,WAAO,IAAD,EAEIzB,mBAAS,IAFb,mBAEpBC,EAFoB,KAEVyB,EAFU,OAGAtB,cAApBxB,EAHoB,EAGpBA,SAAW4C,EAHS,EAGTA,KAiBlB,OAdAnB,qBACQ,YACsB,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,8BAAD,OAA+B3B,EAA/B,yBAAwD4C,IADnE,cACXhB,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAIjBgB,EAAWhB,GAJM,2CAAH,qDAMlBiB,KAEF,CAAC/C,EAAS4C,IAKhB,sBAAKpC,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,6CACA,cAAE,EAAF,CAAeR,SAAUA,OAEzB,gCACA,oCAAM,qBAAIQ,UAAU,qBAAd,cAAqCR,EAArC,eAA2D4C,EAA3D,OAAN,OACGvB,EAAQiB,KAAK,SAAApB,GAAK,OAAI,cAAC,EAAD,CAAiCjB,OAAQiB,EAAOlB,SAAWA,GAApCkB,EAAM8B,cC7BrDC,G,MAAY,SAAC,GAAc,IAAbjD,EAAY,EAAZA,SAEjBkD,EAAQ,gBAAYlD,GAE1B,OACQ,qBAAKQ,UAAU,aAAf,SACI,6BAAI,eAAC,IAAD,CAAMC,GAAIyC,EAAV,UAAqBlD,EAArB,aCFNmD,G,MAAW,WAAK,IAAD,EAEG/B,mBAAS,IAFZ,mBAEdgC,EAFc,KAERC,EAFQ,KAmBzB,OAfA5B,qBACI,YAE0B,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,8BADV,cACZC,EADY,gBAEAA,EAASC,OAFT,OAEbC,EAFa,OAGjBuB,EAAQvB,GAHS,2CAAH,qDAMlBwB,KAEN,IAKE,sBAAK9C,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,oBAAIA,UAAU,WAAd,6BAEJ,qBAAKA,UAAU,YAAf,SACK4C,EAAMd,KAAK,SAAChB,GAAD,OAAS,cAAC,EAAD,CAAyBtB,SAAUsB,EAAKtB,UAAxBsB,EAAK0B,cCP/CO,MArBf,WACE,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,KAAK,gCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCNGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c59bbae9.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchDetailsCard.scss\";\r\n\r\nexport const MatchDetailsCard = ({ teamName, matche }) => {\r\n    if (!matche) return null;\r\n\r\n    const otherTeam = teamName === matche.team1 ? matche.team2 : matche.team1;\r\n    const otherTeamRoute = `/Team/${otherTeam}`;\r\n    const isMatchwon = (matche.matchWinner === teamName)?true:false;\r\n    return (\r\n        <div className={isMatchwon? 'MatchDetailCard won-card':'MatchDetailCard lose-card'}>\r\n            <div>\r\n                <span className='vs'>Vs</span>\r\n                <h1> <Link to={otherTeamRoute}>{otherTeam} </Link> </h1>\r\n                <h2 className='match-date'>{matche.date}</h2>\r\n                <h3 className='match-venue'>at {matche.venue}</h3>\r\n                <h3 className='match-result'>{matche.matchWinner} won by {matche.resultMargin} {matche.result}</h3>\r\n            </div>\r\n            <div className='additional-details'>\r\n                <h3>First Innings</h3>\r\n                <p> {matche.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p> {matche.team2}</p>\r\n                <h3>Man of the Match</h3>\r\n                <p> {matche.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p> {matche.umpire1},{matche.umpire2}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import { React } from 'react';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\nexport const MatchSmallCard = ({ teamName ,match }) => {\r\n\r\n    const otherTeam = teamName === match.team1 ? match.team2:match.team1;\r\n    const otherTeamRoute = `/Team/${otherTeam}`;\r\n    const isMatchwon = (match.matchWinner === teamName)?true:false;\r\n    return (\r\n        <div className={isMatchwon ? 'MatchSmallCard won-card':'MatchSmallCard lose-card'}>\r\n        <span className='vs'>vs</span>\r\n         <h2> <Link to = {otherTeamRoute}> {otherTeam} </Link> </h2> \r\n            <p className='match-result'> {match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n        </div>\r\n    );\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams , Link } from 'react-router-dom';\r\nimport { MatchDetailsCard } from '../components/MatchDetailsCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({ matches: [] });\r\n    const { teamName } = useParams();\r\n    useEffect(\r\n\r\n        () => {\r\n\r\n            const fetchteam = async () => {\r\n                const response = await fetch(`http://localhost:8080/Team/${teamName}`);\r\n                const data = await response.json();\r\n             //   console.log(data);\r\n                setTeam(data);\r\n            };\r\n\r\n            fetchteam();\r\n        }, [teamName]\r\n\r\n    );\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h2> Team Not found..</h2>\r\n    }\r\n    return (\r\n                \r\n        <div className=\"TeamPage\">\r\n           <div className='home-page'>\r\n                <h2><Link to='/'>Home Page </Link></h2>\r\n            </div>\r\n            <div className='team-name-section'>\r\n                <div className='team-name'> <h1>{team.teamName}</h1> </div>\r\n            </div>\r\n            \r\n            <div className='win-lose-section'>\r\n                Wins/Losses\r\n                <PieChart\r\n                    data={[\r\n                        \r\n                        { title: 'Losses', value: team.totalMatches, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.totalWins, color:'#4da375' }\r\n                        \r\n                    ]}\r\n                />\r\n           </div>\r\n            <div className='match-details-section'>\r\n                <h3>Latest Match Details</h3>\r\n                <MatchDetailsCard teamName={team.teamName} matche={team.matches[0]} />\r\n            </div>\r\n\r\n            {team.matches.slice(1).map(match => <MatchSmallCard teamName={team.teamName} match={match} />)}\r\n            <div className='more'>\r\n              <Link to ={ `/Team/${team.teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}` } >More </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./YearSelector.scss\"\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n        let years= [];\r\n        const startYear =  process.env.REACT_APP_DATA_START_YEAR;\r\n        const endYear =  process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n         for(let i=startYear;i<=endYear;i++){\r\n             years.push(i);\r\n             \r\n         }\r\n\r\n        return (\r\n         <ol className='year-list'>\r\n             <h2>{years.map( year =>(\r\n                    <li key ={year} >\r\n                         <Link to= {`/Team/${teamName}/matches/${year}`}> {year}</Link> \r\n                    </li>\r\n                     )\r\n                 )}\r\n             </h2>             \r\n        </ol>     \r\n        )\r\n          \r\n}","import { React ,useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport { MatchDetailsCard } from '../components/MatchDetailsCard';\r\nimport \"./MatchPage.scss\" ;\r\nimport { YearSelector } from './YearSelector';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches , setMatches] = useState([]);\r\n    const {teamName , year } = useParams();\r\n    \r\n\r\n    useEffect(\r\n            ()=>{\r\n                const fetchMatches = async ()=>{\r\n                    const response = await fetch(`http://localhost:8080/Team/${teamName}/matches?year=${year}`);\r\n                    const data = await response.json();\r\n                  //  console.log(data);\r\n                    setMatches(data);\r\n                };\r\n                fetchMatches()\r\n\r\n            },[teamName,year]\r\n\r\n    )\r\n  \r\n    return (\r\n        <div className=\"MatchPage\">\r\n          <div className='year-selection'>\r\n            <h3>Select Year</h3>  \r\n            < YearSelector teamName={teamName}/>\r\n            </div>\r\n            <div>\r\n            <div> <h3 className='match-page-heading'> {teamName} matches in {year} </h3> </div>\r\n             { matches.map( match => <MatchDetailsCard key={match.id} matche={match} teamName ={teamName} /> ) }\r\n            \r\n               \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport \"./TeamTitle.scss\";\r\n\r\n\r\nexport const TeamTitle = ({teamName})=>{\r\n\r\n    const TeamRout = `/Team/${teamName}`;\r\n\r\n    return (\r\n            <div className='Team-Title'>\r\n                <h2><Link to={TeamRout}>{teamName} </Link></h2> \r\n            </div>\r\n    )\r\n}","import {React , useState,useEffect} from 'react';   \r\nimport {TeamTitle} from '../components/TeamTitle';\r\nimport \"./HomePage.scss\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const  HomePage = ()=>{\r\n\r\n        const [teams,setData] = useState([]);\r\n      \r\n    useEffect(\r\n        () =>{\r\n            \r\n              const  fetchAllTeams = async()=>{\r\n                    let  response= await fetch('http://localhost:8080/Team');\r\n                    let data = await response.json();\r\n                    setData(data);\r\n    \r\n                };    \r\n                fetchAllTeams();\r\n            \r\n        },[]\r\n\r\n    );\r\n       \r\n    return (\r\n            <div className='HomePage'>\r\n                <div className='Header-section'>\r\n                    <h1 className='app-name'>IPL Dashboard</h1>\r\n                </div>\r\n                <div className='team-grid'>\r\n                    {teams.map( (team) =><TeamTitle key={team.id} teamName={team.teamName}/>)}\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n\r\n}","import './App.scss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/Team/:teamName/matches/:year'>\n            <MatchPage />\n          </Route>\n          <Route path='/Team/:teamName'>\n            <TeamPage />\n          </Route>\n          <Route path='/'>\n            <HomePage/>\n            </Route>\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}